// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ChannelsColumns holds the columns for the "channels" table.
	ChannelsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "image_path", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// ChannelsTable holds the schema information for the "channels" table.
	ChannelsTable = &schema.Table{
		Name:       "channels",
		Columns:    ChannelsColumns,
		PrimaryKey: []*schema.Column{ChannelsColumns[0]},
	}
	// ChaptersColumns holds the columns for the "chapters" table.
	ChaptersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "title", Type: field.TypeString},
		{Name: "start_time", Type: field.TypeFloat64},
		{Name: "end_time", Type: field.TypeFloat64},
		{Name: "video_chapters", Type: field.TypeString},
	}
	// ChaptersTable holds the schema information for the "chapters" table.
	ChaptersTable = &schema.Table{
		Name:       "chapters",
		Columns:    ChaptersColumns,
		PrimaryKey: []*schema.Column{ChaptersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "chapters_videos_chapters",
				Columns:    []*schema.Column{ChaptersColumns[4]},
				RefColumns: []*schema.Column{VideosColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// CommentsColumns holds the columns for the "comments" table.
	CommentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "text", Type: field.TypeString},
		{Name: "timestamp", Type: field.TypeTime},
		{Name: "like_count", Type: field.TypeInt64},
		{Name: "is_favorited", Type: field.TypeBool},
		{Name: "author", Type: field.TypeString},
		{Name: "author_id", Type: field.TypeString},
		{Name: "author_thumbnail", Type: field.TypeString},
		{Name: "author_is_uploader", Type: field.TypeBool},
		{Name: "parent", Type: field.TypeString},
		{Name: "video_comments", Type: field.TypeString},
	}
	// CommentsTable holds the schema information for the "comments" table.
	CommentsTable = &schema.Table{
		Name:       "comments",
		Columns:    CommentsColumns,
		PrimaryKey: []*schema.Column{CommentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "comments_videos_comments",
				Columns:    []*schema.Column{CommentsColumns[10]},
				RefColumns: []*schema.Column{VideosColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// VideosColumns holds the columns for the "videos" table.
	VideosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "upload_date", Type: field.TypeTime},
		{Name: "uploader", Type: field.TypeString},
		{Name: "duration", Type: field.TypeInt64},
		{Name: "view_count", Type: field.TypeInt64},
		{Name: "like_count", Type: field.TypeInt64},
		{Name: "dislike_count", Type: field.TypeInt64, Nullable: true},
		{Name: "format", Type: field.TypeString, Nullable: true},
		{Name: "width", Type: field.TypeInt64, Nullable: true},
		{Name: "height", Type: field.TypeInt64, Nullable: true},
		{Name: "resolution", Type: field.TypeString, Nullable: true},
		{Name: "fps", Type: field.TypeFloat64, Nullable: true},
		{Name: "audio_codec", Type: field.TypeString, Nullable: true},
		{Name: "video_codec", Type: field.TypeString, Nullable: true},
		{Name: "abr", Type: field.TypeFloat64, Nullable: true},
		{Name: "vbr", Type: field.TypeFloat64, Nullable: true},
		{Name: "epoch", Type: field.TypeInt64, Nullable: true},
		{Name: "comment_count", Type: field.TypeInt64, Nullable: true},
		{Name: "tags", Type: field.TypeString, Nullable: true},
		{Name: "categories", Type: field.TypeString, Nullable: true},
		{Name: "video_path", Type: field.TypeString},
		{Name: "thumbnail_path", Type: field.TypeString},
		{Name: "json_path", Type: field.TypeString},
		{Name: "caption_path", Type: field.TypeString, Nullable: true},
		{Name: "path", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "channel_videos", Type: field.TypeString},
	}
	// VideosTable holds the schema information for the "videos" table.
	VideosTable = &schema.Table{
		Name:       "videos",
		Columns:    VideosColumns,
		PrimaryKey: []*schema.Column{VideosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "videos_channels_videos",
				Columns:    []*schema.Column{VideosColumns[29]},
				RefColumns: []*schema.Column{ChannelsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ChannelsTable,
		ChaptersTable,
		CommentsTable,
		VideosTable,
	}
)

func init() {
	ChaptersTable.ForeignKeys[0].RefTable = VideosTable
	CommentsTable.ForeignKeys[0].RefTable = VideosTable
	VideosTable.ForeignKeys[0].RefTable = ChannelsTable
}
